node snowcrashexample(in, out1, out2, out3 : int) returns();
var
  ok1: bool;
  ok2_0, ok2_1: bool;
  ok3_0, ok3_1, ok3_2, ok3_3, ok3_4, ok3_5, ok3_6, ok3_7: bool;
  type1,type2,type3: bool;
 
let

  type1 = 0 <= out1 and out1 <= 255;
  type2 = 0 <= out2 and out2 <= 255;
  type3 = 0 <= out3 and out3 <= 255;
--%PROPERTY type1;
--%PROPERTY type2;
--%PROPERTY type3;

  ok1 = out1 = (0 -> (if in = 1 then pre(out1) else (if in = 2 then 0 else ((pre(out1) + 1) mod 256))));
--%PROPERTY ok1;

  ok2_0 = true -> ((in = 1) => (out2 = pre(out2)));
  ok2_1 = (out2 = 0) -> true;
--%PROPERTY ok2_0;
--%PROPERTY ok2_1;

  ok3_0 = ((out3 div   1) mod 2) = if in = 1 then 0 -> ((pre(out3) div   1) mod 2) else (((out1 div   1) + (out2 div   1)) mod 2);
  ok3_1 = ((out3 div   2) mod 2) = if in = 1 then 0 -> ((pre(out3) div   2) mod 2) else (((out1 div   2) + (out2 div   2)) mod 2);
  ok3_2 = ((out3 div   4) mod 2) = if in = 1 then 0 -> ((pre(out3) div   4) mod 2) else (((out1 div   4) + (out2 div   4)) mod 2);
  ok3_3 = ((out3 div   8) mod 2) = if in = 1 then 0 -> ((pre(out3) div   8) mod 2) else (((out1 div   8) + (out2 div   8)) mod 2);
  ok3_4 = ((out3 div  16) mod 2) = if in = 1 then 0 -> ((pre(out3) div  16) mod 2) else (((out1 div  16) + (out2 div  16)) mod 2);
  ok3_5 = ((out3 div  32) mod 2) = if in = 1 then 0 -> ((pre(out3) div  32) mod 2) else (((out1 div  32) + (out2 div  32)) mod 2);
  ok3_6 = ((out3 div  64) mod 2) = if in = 1 then 0 -> ((pre(out3) div  64) mod 2) else (((out1 div  64) + (out2 div  64)) mod 2);
  ok3_7 = ((out3 div 128) mod 2) = if in = 1 then 0 -> ((pre(out3) div 128) mod 2) else (((out1 div 128) + (out2 div 128)) mod 2);
--%PROPERTY ok3_0;
--%PROPERTY ok3_1;
--%PROPERTY ok3_2;
--%PROPERTY ok3_3;
--%PROPERTY ok3_4;
--%PROPERTY ok3_5;
--%PROPERTY ok3_6;
--%PROPERTY ok3_7;

--%REALIZABLE in;

tel;
