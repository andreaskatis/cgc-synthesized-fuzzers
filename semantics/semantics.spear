Specification semantics

Imports:

Units:

Types:

Constants:

Patterns:
  pattern oscillate() returns (res: real)
  let
     res = 2.0 * (previous (- res) with initial value 10.0)
  tel
  
  pattern thrice(p: bool) returns (res: bool)
  var
    time: int
    phis: bool
  let
    time = previous (time + 1) with initial value 0
    phis = p and (previous phis with initial value true)
    res  = (time == 2) and phis
  tel
  
Inputs:
  val: real
  
Outputs:
  median: real
  fuzz  : real
    
State:
  st: real
  
Macros:

Assumptions:

Requirements:
  stx_req : st == previous (st + val) with initial value 0.0
  med_req : median == st + val
  out_req : st + val <= fuzz and fuzz < st + val + 10.0
  
Properties:
  test_pattern observe : (thrice(fuzz == oscillate()))
